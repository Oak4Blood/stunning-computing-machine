local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Crimson Project 2", "Serpent")

local Tab = Window:NewTab("Auto Farm")
local Section = Tab:NewSection("Auto Farm")

Section:NewToggle("Show your Hitbox", " ", function(state)
    if state then
        Hitbox = state
while Hitbox == true do
wait()
local backupsize = game.Players.LocalPlayer.Character.HumanoidRootPart.Size
game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = false
game.Players.LocalPlayer.Character.HumanoidRootPart.Transparency = 0.3
game.Players.LocalPlayer.Character.HumanoidRootPart.Size = Vector3.new(50, 2, 50)
end
    else
        Hitbox = state
while Hitbox == false do
wait()
game.Players.LocalPlayer.Character.HumanoidRootPart.Transparency = 1
game.Players.LocalPlayer.Character.HumanoidRootPart.Size = backupsize
end
end
end)

Section:NewToggle("Auto Dig", "Auto Dig", function(state)

    if state then
        AutoDig = state
while AutoDig == true do
wait()

if state == true then IN1() end

end
    else
        AutoDig = state

end
end)

Section:NewToggle("Farm Token", " ", function(state)

    if state then
        afarm = state
while afarm == true do
wait()
IN2()
end
    else
        afarm = state
end
end)

Section:NewToggle("Anti Leave Field", " ", function(state)

    if state then
        anfarm = state
while anfarm == true do
wait()

if state == true then 
IN3()
end
end
    else
        anfarm = state
end
end)

function IN1()
    wait(0.1)
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("ToolCollect"):FireServer()
end

function IN2()
local TweenService = game:GetService("TweenService")
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local hitboxSize = Vector3.new(50, 10, 50)

    local partsInWorkspace = workspace.Collectibles:GetDescendants()

    for _, part in pairs(partsInWorkspace) do
        if part.Name == "C" then
            local inRangeX = math.abs(humanoidRootPart.Position.X - part.Position.X) <= hitboxSize.X / 2
            local inRangeY = math.abs(humanoidRootPart.Position.Y - part.Position.Y) <= hitboxSize.Y / 2
            local inRangeZ = math.abs(humanoidRootPart.Position.Z - part.Position.Z) <= hitboxSize.Z / 2

            if inRangeX and inRangeY and inRangeZ then
                local humanoid = character:WaitForChild("Humanoid")
                humanoid:MoveTo(part.Position)
                humanoid.MoveToFinished:Wait()
                print("Player has reached Part C at position: ", part.Position)
        IN3()
            end
        end
    end
end

function IN3()
local TweenService = game:GetService("TweenService")
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    local zone = workspace.FlowerZones["Hub Field"]
    local zoneCenter = zone.Position
    local zoneSize = zone.Size

    local tweenspeed = 2 
    local minBound = zone.Position - zone.Size / 2
    local maxBound = zone.Position + zone.Size / 2

    if humanoidRootPart.Position.X < minBound.X or humanoidRootPart.Position.X > maxBound.X
    or humanoidRootPart.Position.Z < minBound.Z or humanoidRootPart.Position.Z > maxBound.Z then

        local goalCFrame = CFrame.new(zoneCenter)
        local tweenInfo = TweenInfo.new(tweenspeed, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        local tween = TweenService:Create(humanoidRootPart, tweenInfo, {CFrame = goalCFrame})
        tween:Play()
        tween.Completed:Wait()

        IN2()
    end
end

